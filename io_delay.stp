#! /usr/bin/env stap

/*
 * io_delay.stp Inject IO delay to the process
 * 
 * stap io_delay.stp -I ./lib -DMAXSKIPPED=9999 -g -x pid type=3 delay_us=300
 */

global read_type = 1
global write_type = 2
global type = 3
global start_us = 300
global count = 0

probe begin
{
    fij_logger(0, "begin to delay IO");

    fij_add_option("type", 3, "IO type to inject, read: 1, write: 2, (default: 3)") 
    fij_add_option("delay_us", 300, "Delay time(us), (default 300)")
    fij_add_option("max_delay_us", 0, "Max delay time, if set, a random value in [delay_us, max_delay_us) will be chosen, (default 0)")   
}

probe begin(2000) 
{
    type = fij_params["type"]
    start_us = fij_params["delay_us"]
    if (fij_params["max_delay_us"] > start_us) {
        count = fij_params["max_delay_us"] - start_us
    }   
}

function delay() {
	udelay(randint(count) + start_us)
}

probe vfs.read.return
{
    if ($return < 0) next

    if ((type & read_type == 0)) next

    if (fij_should_fail()) {
        delay()   
        fij_done_fail() 
    }
}

probe vfs.write.return
{
    if ($return < 0) next

    if ((type & write_type == 0)) next

    if (fij_should_fail()) {
        delay()   
        fij_done_fail() 
    }
}

